<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Lob</title>
</head>
<body>
  This page is flying
  <button type="button" id="start">Start</button>
  <script lang="text/javascript" src="//cdn.ably.io/lib/ably.min.js" >
  </script>
  <script>
  function throttle(fn, threshhold, scope) {
    threshhold || (threshhold = 250);
    var last,
    deferTimer;
    return function () {
      var context = scope || this;

      var now = +new Date,
      args = arguments;
      if (last && now < last + threshhold) {
        // hold on to it
        clearTimeout(deferTimer);
        deferTimer = setTimeout(function () {
          last = now;
          fn.apply(context, args);
        }, threshhold);
      } else {
        last = now;
        fn.apply(context, args);
      }
    };
  }

  var apiKey = "1YRBpA.Kva1OA:Wy71uGGrQ8kFl8L_"
  var channelName = "<%= channel_name %>"
  var realtime = new Ably.Realtime({ key: apiKey });
  var channel = realtime.channels.get(channelName);

  function publish(vector){
    channel.publish("myEvent", vector, function(err) {
      if(err)
      console.log('Unable to publish message; err = ' + err.message);
      else
      console.log('Message successfully sent');
    });
  }

  var limitedPublish = throttle(publish, 250)

  var startTime = 0;
  function deviceMotionHandler(deviceMotionEvent) {
    // Fix vector to handle the fact iOS and Windows define it backwards
    var vector;
    if (navigator.userAgent.match(/Windows/i)) {
      vector = {
        x: -1 * deviceMotionEvent.accelerationIncludingGravity.x,
        y: -1 * deviceMotionEvent.accelerationIncludingGravity.y,
        z: -1 * deviceMotionEvent.accelerationIncludingGravity.z
      };
    } else if (navigator.userAgent.match(/Android/i)) {
      vector = deviceMotionEvent.accelerationIncludingGravity;
    } else {
      vector = {
        x: -1 * deviceMotionEvent.accelerationIncludingGravity.x,
        y: -1 * deviceMotionEvent.accelerationIncludingGravity.y,
        z: -1 * deviceMotionEvent.accelerationIncludingGravity.z
      };
    }
    var t;
    if (startTime == 0) {
      startTime = Date.now()
      t = 0
    } else {
      t = Date.now() - startTime
    }
    if (t > 20000) {
      window.removeEventListener("devicemotion", deviceMotionHandler);
    }
    vector.t = t
    limitedPublish(vector)
  }

  document.querySelector("#start").addEventListener("click", function (event) {
    this.parentNode.removeChild(this);

    if (window.DeviceMotionEvent) {
      window.addEventListener("devicemotion", deviceMotionHandler);
    }
  });
  </script>
</body>
</html>
